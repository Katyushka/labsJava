apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'spring-boot'

group 'labsJava'
version '1.0-SNAPSHOT'
buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
        springLoadedVersion = '1.2.6.RELEASE'
    }
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework:springloaded:${springLoadedVersion}")
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa');
    compile('org.springframework.boot:spring-boot-starter-security');
    compile('org.springframework.boot:spring-boot-starter-thymeleaf');
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4');
    runtime("org.hsqldb:hsqldb")

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.+'
    //compile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    //compile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path:2.0.0')
    //testCompile group: 'junit', name: 'junit', version: '4.+'

}

task runLab1Task(type: JavaExec) {
    println 'start Queens task'
    main = 'osu.oop.lab1.Queens'
    classpath = sourceSets.main.runtimeClasspath
}

task runLab4ListTask(type: JavaExec){
    println 'start CarList task'
    main = 'osu.oop.lab4.collection.list.ListTask'
    classpath = sourceSets.main.runtimeClasspath
}

task runLab4MapTask(type: JavaExec){
    println 'start SongMap task'
    main = 'osu.oop.lab4.collection.map.MapTask'
    classpath = sourceSets.main.runtimeClasspath
}

task runLab4QueueTask(type: JavaExec){
    println 'start Queue task'
    main = 'osu.oop.lab4.collection.QueueTask'
    classpath = sourceSets.main.runtimeClasspath
}

task runLab4StackTask(type: JavaExec){
    println 'start Stack task'
    main = 'osu.oop.lab4.collection.SrtackTask'
    classpath = sourceSets.main.runtimeClasspath
}

configure(runLab1Task) {
    group = 'OOP Labs'
    description = 'Object Oriented programming labs executors'
}

springBoot {
    mainClass = "osu.oop.lab1.Queens"
}